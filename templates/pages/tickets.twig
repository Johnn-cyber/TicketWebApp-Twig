{% extends "layouts/base.twig" %}

{% block title %}Tickets - TicketApp{% endblock %}

{% block content %}
<div class="min-h-screen bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow">
        <div class="container-max h-16 flex items-center justify-between">
            <div class="flex items-center space-x-4">
                <button onclick="navigateTo('dashboard')" class="text-gray-600 hover:text-gray-900">
                    ‚Üê Back to Dashboard
                </button>
                <h1 class="text-xl font-bold text-gray-900">Ticket Management</h1>
            </div>
            <button onclick="openModal()" class="btn-primary">
                Create New Ticket
            </button>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="container-max py-8">
        <div id="tickets-grid" class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3"></div>
    </main>
</div>

<!-- Modal -->
<div id="modal" class="hidden fixed inset-0 z-50 overflow-y-auto">
    <div class="flex items-center justify-center min-h-screen px-4">
        <div class="fixed inset-0 bg-black bg-opacity-30" onclick="closeModal()"></div>
        <div class="relative bg-white rounded-lg p-6 max-w-md w-full">
            <h3 id="modal-title" class="text-lg font-medium text-gray-900 mb-4">Create New Ticket</h3>
            
            <form id="ticket-form" class="space-y-4">
                <input type="hidden" id="ticket-id" value="">
                
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                    <input
                        id="title"
                        type="text"
                        required
                        class="form-input mt-1"
                    />
                    <p id="title-error" class="mt-1 text-sm text-red-600 hidden"></p>
                </div>

                <div>
                    <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
                    <textarea
                        id="description"
                        rows="3"
                        required
                        class="form-input mt-1"
                    ></textarea>
                    <p id="description-error" class="mt-1 text-sm text-red-600 hidden"></p>
                </div>

                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700">Status</label>
                    <select id="status" class="form-input mt-1">
                        <option value="open">Open</option>
                        <option value="in_progress">In Progress</option>
                        <option value="closed">Closed</option>
                    </select>
                </div>

                <div class="mt-6 flex justify-end space-x-3">
                    <button type="button" onclick="closeModal()" class="btn-secondary">
                        Cancel
                    </button>
                    <button type="submit" class="btn-primary">
                        <span id="submit-text">Create Ticket</span>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
let editingTicketId = null;

function loadTickets() {
    const tickets = TicketManager.getTickets();
    const grid = document.getElementById('tickets-grid');
    
    grid.innerHTML = tickets.map(ticket => `
        <div class="card">
            <div class="flex justify-between items-start">
                <h3 class="text-lg font-medium text-gray-900">${ticket.title}</h3>
                <span class="status-tag ${getStatusClass(ticket.status)}">
                    ${ticket.status.replace('_', ' ')}
                </span>
            </div>
            <p class="mt-2 text-sm text-gray-600">${ticket.description}</p>
            <div class="mt-4 flex justify-between items-center">
                <span class="text-xs text-gray-500">
                    Created: ${new Date(ticket.createdAt).toLocaleDateString()}
                </span>
                <div class="space-x-2">
                    <button
                        onclick="editTicket('${ticket.id}')"
                        class="text-primary-600 hover:text-primary-800"
                    >
                        Edit
                    </button>
                    <button
                        onclick="deleteTicket('${ticket.id}')"
                        class="text-red-600 hover:text-red-800"
                    >
                        Delete
                    </button>
                </div>
            </div>
        </div>
    `).join('');
}

function openModal() {
    editingTicketId = null;
    document.getElementById('modal-title').textContent = 'Create New Ticket';
    document.getElementById('submit-text').textContent = 'Create Ticket';
    document.getElementById('ticket-form').reset();
    document.getElementById('modal').classList.remove('hidden');
}

function closeModal() {
    document.getElementById('modal').classList.add('hidden');
    editingTicketId = null;
}

function editTicket(id) {
    const ticket = TicketManager.getTickets().find(t => t.id === id);
    if (!ticket) return;
    
    editingTicketId = id;
    document.getElementById('modal-title').textContent = 'Edit Ticket';
    document.getElementById('submit-text').textContent = 'Update Ticket';
    document.getElementById('ticket-id').value = id;
    document.getElementById('title').value = ticket.title;
    document.getElementById('description').value = ticket.description;
    document.getElementById('status').value = ticket.status;
    document.getElementById('modal').classList.remove('hidden');
}

function deleteTicket(id) {
    if (confirm('Are you sure you want to delete this ticket?')) {
        TicketManager.deleteTicket(id);
        showToast('Ticket deleted successfully!', 'success');
        loadTickets();
    }
}

function getStatusClass(status) {
    const classes = {
        'open': 'status-tag-open',
        'in_progress': 'status-tag-in-progress',
        'closed': 'status-tag-closed'
    };
    return classes[status] || '';
}

document.getElementById('ticket-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const title = document.getElementById('title').value;
    const description = document.getElementById('description').value;
    const status = document.getElementById('status').value;
    
    // Clear errors
    document.getElementById('title-error').classList.add('hidden');
    document.getElementById('description-error').classList.add('hidden');
    
    let hasError = false;
    
    if (title.length < 3) {
        document.getElementById('title-error').textContent = 'Title must be at least 3 characters';
        document.getElementById('title-error').classList.remove('hidden');
        hasError = true;
    }
    
    if (description.length < 10) {
        document.getElementById('description-error').textContent = 'Description must be at least 10 characters';
        document.getElementById('description-error').classList.remove('hidden');
        hasError = true;
    }
    
    if (hasError) return;
    
    const ticketData = { title, description, status };
    
    if (editingTicketId) {
        TicketManager.updateTicket(editingTicketId, ticketData);
        showToast('Ticket updated successfully!', 'success');
    } else {
        TicketManager.createTicket(ticketData);
        showToast('Ticket created successfully!', 'success');
    }
    
    closeModal();
    loadTickets();
});

// Load tickets on page load
loadTickets();
</script>
{% endblock %}